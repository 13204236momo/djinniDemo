plugins {
    id 'com.android.application'
}

android {

    compileSdkVersion 31
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.zhoumohan.djinni"
        minSdkVersion 19
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"

        externalNativeBuild {
            cmake {
                targets 'mytest'
                abiFilters "armeabi-v7a"//, "arm64-v8a" //, "x86_64"
                cppFlags "-std=c++11 -fexceptions -frtti"
                arguments "-DANDROID_STL=c++_shared"

            }
        }

        ndk {
            //选择要添加的对应CPU类型的so
            abiFilters 'armeabi-v7a'
            // 'armeabi' , 'armeabi-v7a', 'armeabi-v8a', 'arm64-v8a','x86', 'x86_64', 'mips', 'mips64'
        }

    }

    signingConfigs {
        release {
            storeFile file("../keystore/mgdemo.keystore")
            keyAlias "mgdemo"
            storePassword "mgdemo123!"
            keyPassword "mgdemo123!"
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.6.0"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        viewBinding = true
        dataBinding = true
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
}


task cleanFiles(type: Delete) {
    delete file("./build")
    delete file("./.externalNativeBuild")
}
task generateDjinni() {
    dependsOn cleanFiles
    doLast {
        println("generateDjinni")
        exec {
            workingDir "../../../api_generator/tools"
            commandLine 'sh', 'generate.sh'
        }
    }
}
task buildAndroid() {
    dependsOn generateDjinni
    doLast {
        exec {
            println("buildAndroid")
            workingDir "../../"
            commandLine 'sh', 'build_android.sh'
        }
    }
}

preBuild.dependsOn(buildAndroid)

dependencies {
    implementation 'androidx.appcompat:appcompat:1.4.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'
}