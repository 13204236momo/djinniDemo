// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from info.djinni

#include "JNITestInfoStore.h"  // my header
#include "JNISexModeEnum.h"
#include "Marshal.hpp"

namespace djinni_generated {

JNITestInfoStore::JNITestInfoStore() = default;

JNITestInfoStore::~JNITestInfoStore() = default;

auto JNITestInfoStore::fromCpp(JNIEnv* jniEnv, const CppType& c) -> ::djinni::LocalRef<JniType> {
    const auto& data = ::djinni::JniClass<JNITestInfoStore>::get();
    auto r = ::djinni::LocalRef<JniType>{jniEnv->NewObject(data.clazz.get(), data.jconstructor,
                                                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c.id)),
                                                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c.name)),
                                                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c.project)),
                                                           ::djinni::get(::djinni_generated::JNISexModeEnum::fromCpp(jniEnv, c.sex)))};
    ::djinni::jniExceptionCheck(jniEnv);
    return r;
}

auto JNITestInfoStore::toCpp(JNIEnv* jniEnv, JniType j) -> CppType {
    ::djinni::JniLocalScope jscope(jniEnv, 5);
    assert(j != nullptr);
    const auto& data = ::djinni::JniClass<JNITestInfoStore>::get();
    return {::djinni::I32::toCpp(jniEnv, jniEnv->GetIntField(j, data.field_id)),
            ::djinni::String::toCpp(jniEnv, (jstring)jniEnv->GetObjectField(j, data.field_name)),
            ::djinni::String::toCpp(jniEnv, (jstring)jniEnv->GetObjectField(j, data.field_project)),
            ::djinni_generated::JNISexModeEnum::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_sex))};
}

}  // namespace djinni_generated
